/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package arbolesm.vias;
import javax.swing.JOptionPane;
import java.util.LinkedList;
 import java.util.Queue;
/**
 *
 * @author Diego U
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    ArbolM arbol=new ArbolM();
    ArbolM arbol2=new ArbolM();
    public MainForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Insertar = new javax.swing.JButton();
        INORDEN = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Salida = new javax.swing.JTextArea();
        PreOrden = new javax.swing.JButton();
        PostOrden = new javax.swing.JButton();
        Altura = new javax.swing.JButton();
        Suma = new javax.swing.JButton();
        Buscar = new javax.swing.JButton();
        Niveles = new javax.swing.JButton();
        SumaNiveles = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        BuscarNodo = new javax.swing.JButton();
        CantidadNodos = new javax.swing.JButton();
        SumaNiveless = new javax.swing.JButton();
        RecorridoNiveles = new javax.swing.JButton();
        RecorridoNiveles1 = new javax.swing.JButton();
        ArbolesIguales = new javax.swing.JButton();
        Insertar2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        NivelElemento = new javax.swing.JButton();
        RecorridoAbajoArriba = new javax.swing.JButton();
        MayorNivel = new javax.swing.JButton();
        ParesDesdeNivel = new javax.swing.JButton();
        RecorridoNiveles2 = new javax.swing.JButton();
        PrimosNivel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Insertar.setText("INSERTAR 1");
        Insertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertarActionPerformed(evt);
            }
        });

        INORDEN.setText("INORDEN");
        INORDEN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INORDENActionPerformed(evt);
            }
        });

        Salida.setColumns(20);
        Salida.setRows(5);
        jScrollPane2.setViewportView(Salida);

        PreOrden.setText("PREORDEN");
        PreOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreOrdenActionPerformed(evt);
            }
        });

        PostOrden.setText("POSTORDEN");
        PostOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PostOrdenActionPerformed(evt);
            }
        });

        Altura.setText("ALTURA");
        Altura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AlturaActionPerformed(evt);
            }
        });

        Suma.setText("SUMA ELEMENTOS");
        Suma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SumaActionPerformed(evt);
            }
        });

        Buscar.setText("BUSCAR");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        Niveles.setText("BUSQUEDA POR NIVELES");
        Niveles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NivelesActionPerformed(evt);
            }
        });

        SumaNiveles.setText("SUMA NIVELES");
        SumaNiveles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SumaNivelesActionPerformed(evt);
            }
        });

        Clear.setText("CLEAR");
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        BuscarNodo.setText("BUSCAR NODO");
        BuscarNodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarNodoActionPerformed(evt);
            }
        });

        CantidadNodos.setText("CANTIDAD DE NODOS");
        CantidadNodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CantidadNodosActionPerformed(evt);
            }
        });

        SumaNiveless.setText("SUMA TODOS LOS NIVELES");
        SumaNiveless.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SumaNivelessActionPerformed(evt);
            }
        });

        RecorridoNiveles.setText("Recorrido Niveles Arriba Abajo");
        RecorridoNiveles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecorridoNivelesActionPerformed(evt);
            }
        });

        RecorridoNiveles1.setText("Recorrido Niveles Izquierda Derecha");
        RecorridoNiveles1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecorridoNiveles1ActionPerformed(evt);
            }
        });

        ArbolesIguales.setText("Son Iguales");
        ArbolesIguales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArbolesIgualesActionPerformed(evt);
            }
        });

        Insertar2.setText("INSERTAR 2");
        Insertar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Insertar2ActionPerformed(evt);
            }
        });

        jButton1.setText("PARES POR NIVEL");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        NivelElemento.setText("NIVEL DE ELEMENTO");
        NivelElemento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NivelElementoActionPerformed(evt);
            }
        });

        RecorridoAbajoArriba.setText("Recorrido Niveles Abajo Arriba");
        RecorridoAbajoArriba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecorridoAbajoArribaActionPerformed(evt);
            }
        });

        MayorNivel.setText("MAYOR NIVEL");
        MayorNivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MayorNivelActionPerformed(evt);
            }
        });

        ParesDesdeNivel.setText("ParesDesdeNivel");
        ParesDesdeNivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParesDesdeNivelActionPerformed(evt);
            }
        });

        RecorridoNiveles2.setText("Recorrido Niveles Arriba Abajo recursivo");
        RecorridoNiveles2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecorridoNiveles2ActionPerformed(evt);
            }
        });

        PrimosNivel.setText("PRIMOS POR NIVEL");
        PrimosNivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrimosNivelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Insertar, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(INORDEN, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(PreOrden, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Suma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Altura, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(PostOrden, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SumaNiveles, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Insertar2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BuscarNodo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CantidadNodos)
                                .addGap(37, 37, 37)
                                .addComponent(Clear))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Niveles)
                                    .addComponent(Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SumaNiveless)
                                    .addComponent(PrimosNivel))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RecorridoNiveles2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(RecorridoNiveles1)
                        .addComponent(ArbolesIguales, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)
                        .addComponent(RecorridoNiveles)
                        .addComponent(NivelElemento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RecorridoAbajoArriba, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(ParesDesdeNivel)
                    .addComponent(MayorNivel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(187, 187, 187))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Insertar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Insertar2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(PreOrden)
                        .addGap(18, 18, 18)
                        .addComponent(INORDEN))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(RecorridoNiveles)
                        .addGap(18, 18, 18)
                        .addComponent(RecorridoNiveles1)
                        .addGap(9, 9, 9)
                        .addComponent(ArbolesIguales)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(CantidadNodos)
                                    .addComponent(Clear))
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Niveles)
                                    .addComponent(SumaNiveless))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Buscar)
                                    .addComponent(PrimosNivel))
                                .addGap(18, 18, 18)
                                .addComponent(BuscarNodo))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PostOrden)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Altura)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Suma)
                                .addGap(18, 18, 18)
                                .addComponent(SumaNiveles))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(NivelElemento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RecorridoAbajoArriba)
                        .addGap(18, 18, 18)
                        .addComponent(MayorNivel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ParesDesdeNivel)))
                .addGap(18, 18, 18)
                .addComponent(RecorridoNiveles2)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertarActionPerformed
        // TODO add your handling code here:
       
       
            int dato=Integer.parseInt(JOptionPane.showInputDialog("Introduzca elemento"));
            arbol.Insertar(dato);
             

        
        
       
        
    }//GEN-LAST:event_InsertarActionPerformed

    private void INORDENActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INORDENActionPerformed
        // TODO add your handling code here:
       
     Salida.setText("");
        arbol.InOrden(Salida); 
    }//GEN-LAST:event_INORDENActionPerformed

    private void PreOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreOrdenActionPerformed
        // TODO add your handling code here:
        Salida.setText("");
        arbol.PreOrden(Salida); 
    }//GEN-LAST:event_PreOrdenActionPerformed

    private void PostOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PostOrdenActionPerformed
        // TODO add your handling code here:
          Salida.setText("");
        arbol.PostOrden(Salida);
        
    }//GEN-LAST:event_PostOrdenActionPerformed

    private void AlturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AlturaActionPerformed
        // TODO add your handling code here:
        Salida.setText(String.valueOf(arbol.Altura()));
    }//GEN-LAST:event_AlturaActionPerformed

    private void SumaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SumaActionPerformed
        // TODO add your handling code here:
        Salida.setText("");
        Salida.setText(String.valueOf(arbol.SumaElementos()));
    }//GEN-LAST:event_SumaActionPerformed

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
        // TODO add your handling code here:
        int dato=Integer.parseInt(JOptionPane.showInputDialog("Introduzca elemento a buscar"));
        
       if(arbol.Existe(dato))
        {
            JOptionPane.showMessageDialog(null,"EL DATO EXISTE");

            
        }
       else
       {
           JOptionPane.showMessageDialog(null,"EL DATO NO EXISTE");

       }
               
    }//GEN-LAST:event_BuscarActionPerformed

    private void NivelesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NivelesActionPerformed
        // TODO add your handling code here:
        int dato=Integer.parseInt(JOptionPane.showInputDialog("Introduzca el nivel del cual quiere ver los elementos"));
        Salida.setText(" ");
        arbol.Nivel(dato, Salida);
        
    }//GEN-LAST:event_NivelesActionPerformed

    private void SumaNivelesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SumaNivelesActionPerformed
        // TODO add your handling code here:
        int dato=Integer.parseInt(JOptionPane.showInputDialog("Introduzca el nivel para realizar la suma de los mismos"));
        Salida.setText(" ");
       Salida.setText(String.valueOf (arbol.SumaNivel(dato)));//Esto retorna un dato
    }//GEN-LAST:event_SumaNivelesActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        // TODO add your handling code here:
        Salida.setText("");
    }//GEN-LAST:event_ClearActionPerformed

    private void BuscarNodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarNodoActionPerformed
        // TODO add your handling code here:
        Salida.setText(" ");
        int dato=Integer.parseInt(JOptionPane.showInputDialog("Introduzca el elemento para buscar su nodo"));
        Nodo N=arbol.BuscarNodo(dato);
        if(N!=null)
        {
            for (int i = 1; i <= N.CantOcupados(); i++) 
           {
            Salida.append(String.valueOf(N.getElem(i))+ " ");
            
           }
        }
        else
        {
         JOptionPane.showMessageDialog(null,"EL ELEMENTO INGRESADO NO ESTA EN EL ARBOL, POR LO TANTO NO TIENE NODO");   
        }
    }//GEN-LAST:event_BuscarNodoActionPerformed

    private void CantidadNodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CantidadNodosActionPerformed
        // TODO add your handling code here:
        Salida.setText("");
        Salida.setText(String.valueOf(arbol.CantidadNodos()));
    }//GEN-LAST:event_CantidadNodosActionPerformed

    private void SumaNivelessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SumaNivelessActionPerformed
        // TODO add your handling code here:
        Salida.setText("");
        arbol.SumaNiveles(Salida);
    }//GEN-LAST:event_SumaNivelessActionPerformed

    private void RecorridoNivelesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecorridoNivelesActionPerformed
        // TODO add your handling code here:
        Salida.setText(" ");
        arbol.RecorridoNivelesArribaAbajoIterativo(Salida);
       
       
    }//GEN-LAST:event_RecorridoNivelesActionPerformed

    private void RecorridoNiveles1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecorridoNiveles1ActionPerformed
        // TODO add your handling code here:
        Salida.setText("");
        arbol.RecorridoNivelesIzquierdaDerecha(Salida);
    }//GEN-LAST:event_RecorridoNiveles1ActionPerformed

    private void ArbolesIgualesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArbolesIgualesActionPerformed
        // TODO add your handling code here:
       if(arbol.ArbolesIguales(arbol2))
       {
           JOptionPane.showMessageDialog(null,"Son iguales");
       }
       else
       {
           JOptionPane.showMessageDialog(null,"No son iguales");
       }
    }//GEN-LAST:event_ArbolesIgualesActionPerformed

    private void Insertar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Insertar2ActionPerformed
        // TODO add your handling code here:
         int dato=Integer.parseInt(JOptionPane.showInputDialog("Introduzca elemento"));
         arbol2.Insertar(dato);
             

    }//GEN-LAST:event_Insertar2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Salida.setText("");
        arbol.ParesPorNivel(Salida);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void NivelElementoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NivelElementoActionPerformed
        // TODO add your handling code here:
        int dato=Integer.parseInt(JOptionPane.showInputDialog("Introduzca el elemento para conocer su nivel:"));
        Salida.setText(String.valueOf(arbol.NivelElemento(dato)));
        
        
        
    }//GEN-LAST:event_NivelElementoActionPerformed

    private void RecorridoAbajoArribaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecorridoAbajoArribaActionPerformed
        // TODO add your handling code here:
        
         Salida.setText("");
        arbol.RecorridoNivelAbajoArriba(Salida);
    }//GEN-LAST:event_RecorridoAbajoArribaActionPerformed

    private void MayorNivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MayorNivelActionPerformed
        // TODO add your handling code here:
        Salida.setText("");
        arbol.MayorElementoporNivel(Salida);
    }//GEN-LAST:event_MayorNivelActionPerformed

    private void ParesDesdeNivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParesDesdeNivelActionPerformed
        // TODO add your handling code here:
        int dato=Integer.parseInt(JOptionPane.showInputDialog("Introduzca el nivel:"));
        arbol.ParesApartirdeunNivel(Salida, dato);
    }//GEN-LAST:event_ParesDesdeNivelActionPerformed

    private void RecorridoNiveles2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecorridoNiveles2ActionPerformed
        // TODO add your handling code here:
        Salida.setText(" ");
        arbol.RecorridoNivelesArribaAbajo(Salida);
    }//GEN-LAST:event_RecorridoNiveles2ActionPerformed

    private void PrimosNivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrimosNivelActionPerformed
        // TODO add your handling code here:
        Salida.setText(" ");
        arbol.PrimosxNivel(Salida);
    }//GEN-LAST:event_PrimosNivelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Altura;
    private javax.swing.JButton ArbolesIguales;
    private javax.swing.JButton Buscar;
    private javax.swing.JButton BuscarNodo;
    private javax.swing.JButton CantidadNodos;
    private javax.swing.JButton Clear;
    private javax.swing.JButton INORDEN;
    private javax.swing.JButton Insertar;
    private javax.swing.JButton Insertar2;
    private javax.swing.JButton MayorNivel;
    private javax.swing.JButton NivelElemento;
    private javax.swing.JButton Niveles;
    private javax.swing.JButton ParesDesdeNivel;
    private javax.swing.JButton PostOrden;
    private javax.swing.JButton PreOrden;
    private javax.swing.JButton PrimosNivel;
    private javax.swing.JButton RecorridoAbajoArriba;
    private javax.swing.JButton RecorridoNiveles;
    private javax.swing.JButton RecorridoNiveles1;
    private javax.swing.JButton RecorridoNiveles2;
    private javax.swing.JTextArea Salida;
    private javax.swing.JButton Suma;
    private javax.swing.JButton SumaNiveles;
    private javax.swing.JButton SumaNiveless;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
